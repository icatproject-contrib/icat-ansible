# Real comments in this file are marked with '#' whereas commented out lines
# are marked with '!'

# The lifetime of a session
lifetimeMinutes = 120

# Provide CRUD access to authz tables
 rootUserNames = {% if ansible_local.local.instantiations.authn_simple is defined and ansible_local.local.instantiations.authn_simple == 'true' %}simple/root {% endif %}{% if ansible_local.local.instantiations.authn_db is defined and ansible_local.local.instantiations.authn_db == 'true' %}db/root {% endif %} 
# Restrict total number of entities to return in a search call
maxEntities = 10000

# Maximum ids in a list - this must not exceed 1000 for Oracle
maxIdsInQuery = 500

# Size of cache to be used when importing data into ICAT
importCacheSize = 50

# Size of cache to be used when exporting data from ICAT
exportCacheSize = 50

# Desired authentication plugin mnemonics
authn.list = {% if ansible_local.local.instantiations.authn_simple is defined and ansible_local.local.instantiations.authn_simple == 'true' %}simple {% endif %}{% if ansible_local.local.instantiations.authn_db is defined and ansible_local.local.instantiations.authn_db == 'true' %}db {% endif %}{% if ansible_local.local.instantiations.authn_anon is defined and ansible_local.local.instantiations.authn_anon == 'true' %}anon {% endif %}{% if ansible_local.local.instantiations.authn_ldap is defined and ansible_local.local.instantiations.authn_ldap == 'true' %}ldap {% endif %}{% if ansible_local.local.instantiations.authn_ip_clf is defined and ansible_local.local.instantiations.authn_ip_clf == 'true' %}ip_clf {% endif %}{% if ansible_local.local.instantiations.authn_uows_clf is defined and ansible_local.local.instantiations.authn_uows_clf == 'true' %}uows_clf {% endif %}

# Parameters for each of the four plugins
{% if ansible_local.local.instantiations.authn_db is defined and ansible_local.local.instantiations.authn_db == 'true' %} 
authn.db.url = https://{{ authn_db_url }}:8181
{% else %}
!authn.db.url = https://localhost:8181
{% endif %}

{% if ansible_local.local.instantiations.authn_ldap is defined and ansible_local.local.instantiations.authn_ldap == 'true' %}
{% if authn_ldap_compat1x is defined and authn_ldap_compat1x %}
authn.ldap.jndi = java:global/authn.ldap-{{ authn_ldap_version }}/LDAP_Authenticator
{% else %}
authn.ldap.url = https://{{ authn_ldap_url }}:8181
{% endif %}
authn.ldap.admin = true
authn.ldap.friendly = Federal Id
{% else %}
!authn.ldap.url = https://localhost:8181
!authn.ldap.admin = true
!authn.ldap.friendly = Federal Id
{% endif %}

{% if ansible_local.local.instantiations.authn_simple is defined and ansible_local.local.instantiations.authn_simple == 'true' %}
{% if authn_simple_compat1x is defined and authn_simple_compat1x %}
authn.simple.jndi = java:global/authn.simple-{{ authn_simple_version }}/SIMPLE_Authenticator
{% else %}
authn.simple.url = https://{{ authn_simple_url }}:8181 
{% endif %}
authn.simple.friendly = Simple
{% else %}
!authn.simple.url = https://localhost:8181 
!authn.simple.friendly = Simple
{% endif %}

{% if ansible_local.local.instantiations.authn_anon is defined and ansible_local.local.instantiations.authn_anon == 'true' %}
authn.anon.url = https://{{ authn_anon_url }}:8181
authn.anon.friendly = Anonymous
{% else %}
!authn.anon.url = https://localhost:8181
!authn.anon.friendly = Anonymous
{% endif %}

{% if ansible_local.local.instantiations.authn_ip_clf is defined and ansible_local.local.instantiations.authn_ip_clf == 'true' %}
authn.ip_clf.jndi = java:global/authn.ip_clf-{{ authn_ip_clf_version }}/CLF_IP_Authenticator
authn.ip_clf.friendly = IP
{% endif %}

{% if ansible_local.local.instantiations.authn_uows_clf is defined and ansible_local.local.instantiations.authn_uows_clf == 'true' %}
authn.uows_clf.jndi = java:global/authn.uows_clf-{{ authn_uows_clf_version }}/CLF_UOWS_Authenticator
authn.uows_clf.friendly = IP
{% endif %}

# Notification setup
notification.list = Dataset Datafile
notification.Dataset = CU
notification.Datafile = CU

# Call logging setup
{% if icat_server_compat46 is defined and icat_server_compat46 %}
log.list = file table
log.file = S
log.table = S
{% else %}
log.list = SESSION WRITE READ INFO
{% endif %}

# Lucene
{% if ansible_local.local.instantiations.icat_lucene is defined and ansible_local.local.instantiations.icat_lucene == 'true' %}
lucene.url = https://{{ lucene_url }}:8181
lucene.populateBlockSize = 1000
lucene.directory = /home/{{ payara_user }}/data/lucene
lucene.backlogHandlerIntervalSeconds = 60
lucene.enqueuedRequestIntervalSeconds = 5
lucene.entitiesToIndex = Dataset Investigation InvestigationUser DatasetParameter InvestigationParameter Sample
{% else %}
!lucene.url = https://localhost:8181
!lucene.populateBlockSize = 10000
!lucene.directory = /home/{{ payara_user }}/data/lucene
!lucene.backlogHandlerIntervalSeconds = 60
!lucene.enqueuedRequestIntervalSeconds = 5
!lucene.entitiesToIndex = Dataset Investigation InvestigationUser DatasetParameter InvestigationParameter Sample
{% endif %}

# List members of cluster
!cluster = http://vm200.nubes.stfc.ac.uk:8080 https://smfisher:8181

# Optional key which must match that of the IDS server if the IDS is in use and has a key for digest protection of Datafile.location
!key = ???
