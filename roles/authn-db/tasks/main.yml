---
- name: "Check authn-db package"
  stat:
    path: /home/{{ payara_user }}/downloads/authn.db-{{ authn_db_version }}-distro.zip
  register: packageResult

- name: "Download authn-db"
  get_url:
    url: https://repo.icatproject.org/repo/org/icatproject/authn.db/{{ authn_db_version }}/authn.db-{{ authn_db_version }}-distro.zip
    dest: /home/{{ payara_user }}/downloads
    owner: "{{ payara_user }}"
    group: "{{ payara_user }}"
    mode: 0664
  when: packageResult.stat.exists is defined and packageResult.stat.exists == false

- name: "Check authn-db installation"
  stat:
    path: /home/{{ payara_user }}/install/authn.db
  register: installationResult

- name: "Unarchive authn-db if not installed"
  unarchive:
    src: /home/{{ payara_user }}/downloads/authn.db-{{ authn_db_version }}-distro.zip
    dest: /home/{{ payara_user }}/install
    remote_src: true
    owner: "{{ payara_user }}"
    group: "{{ payara_user }}"
  when: installationResult.stat.exists is defined and installationResult.stat.exists == false

- name: "Check setup.properties file existence"
  local_action: stat path={{ role_path }}/files/setup.properties
  become: false
  register: setupPropertiesResult

- name: "Configure authn-db setup.properties via copying"
  copy:
    src: files/setup.properties
    dest: /home/{{ payara_user }}/install/authn.db/setup.properties
    owner: "{{ payara_user }}"
    group: "{{ payara_user }}"
    mode: 0600
  when: setupPropertiesResult.stat.exists is defined and setupPropertiesResult.stat.exists == true
  notify:
    - "authn-db-handler"

- name: "Configure authn-db setup.properties via templating"
  template:
    src: templates/setup.properties.j2
    dest: /home/{{ payara_user }}/install/authn.db/setup.properties
    owner: "{{ payara_user }}"
    group: "{{ payara_user }}"
    mode: 0600
  when: setupPropertiesResult.stat.exists is defined and setupPropertiesResult.stat.exists == false
  notify:
    - "authn-db-handler"

- name: "Check run.properties file existence"
  local_action: stat path={{ role_path }}/files/run.properties
  become: false
  register: runPropertiesResult

- name: "Configure authn-db run.properties via copying"
  copy:
    src: files/run.properties
    dest: /home/{{ payara_user }}/install/authn.db/run.properties
    owner: "{{ payara_user }}"
    group: "{{ payara_user }}"
    mode: 0664
  when: runPropertiesResult.stat.exists is defined and runPropertiesResult.stat.exists == true
  notify:
    - "authn-db-handler"

- name: "Configure authn-db run.properties via templating"
  template:
    src: templates/run.properties.j2
    dest: /home/{{ payara_user }}/install/authn.db/run.properties
    owner: "{{ payara_user }}"
    group: "{{ payara_user }}"
    mode: 0664
  when: runPropertiesResult.stat.exists is defined and runPropertiesResult.stat.exists == false
  notify:
    - "authn-db-handler"

- name: "Configure authn-db logback.xml"
  copy:
    src: files/logback.xml
    dest: /home/{{ payara_user }}/install/authn.db/logback.xml
    owner: "{{ payara_user }}"
    group: "{{ payara_user }}"
    mode: 0664
  notify:
    - "authn-db-handler"

- name: "Setup authn-db if not setup"
  import_tasks: tasks/installation.yml
  when: (ansible_local is not defined) or (ansible_local.local is not defined) or (ansible_local.local.instantiations is not defined) or (ansible_local.local.instantiations.authn_db is not defined) or (ansible_local.local.instantiations.authn_db != 'true')

- name: "Force ansible to regather local facts - needed to detect whether mariadb has been installed"
  setup:
    filter: ansible_local

- name: "Setup default database users"
  import_tasks: create_default_users.yml
  when: (ansible_local is defined) and (ansible_local.local is defined) and (ansible_local.local.instantiations is defined) and (ansible_local.local.instantiations.mariadb is defined) or (ansible_local.local.instantiations.mariadb == 'true')
