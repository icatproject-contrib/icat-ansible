---
- name: "Check ids_storage_file package"
  stat:
    path: /home/{{ payara_user }}/downloads/ids.storage_file-{{ ids_storage_file_version }}-distro.zip
  register: packageResult

- name: "Download ids_storage_file"
  community.general.maven_artifact:
    repository_url: "https://repo.icatproject.org/repo"
    group_id: "org.icatproject"
    artifact_id: "ids.storage_file"
    version: "{{ ids_storage_file_version }}"
    classifier: "distro"
    extension: "zip"
    dest: "/home/{{ payara_user }}/downloads/ids.storage_file-{{ ids_storage_file_version }}-distro.zip"
    owner: "{{ payara_user }}"
    group: "{{ payara_user_group }}"
    mode: 0664
  when: packageResult.stat.exists is defined and packageResult.stat.exists == false

- name: 'Unarchive ids_storage_file if not installed'
  unarchive:
    src: /home/{{ payara_user }}/downloads/ids.storage_file-{{ ids_storage_file_version }}-distro.zip
    dest: /home/{{ payara_user }}/install
    remote_src: true
    owner: '{{ payara_user }}'
    group: '{{ payara_user_group }}'
  when: ansible_local.local.instantiations.ids_storage_file is not defined or ansible_local.local.versions.ids_storage_file != ids_storage_file_version

# IDS Storage File uses jar files, not war files like other ICAT components
- name: "Find any jar files not matching the current version"
  find:
    paths: /home/{{ payara_user }}/install/ids.storage_file/
    use_regex: yes
    patterns: "^.*(?<!{{ ids_storage_file_version }})\\.jar$"
  register: jarFilesResult

- name: "Remove jar files not matching the current version"
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ jarFilesResult.files }}"

- name: "Check setup.properties file existence"
  local_action: stat path={{ role_path }}/files/setup.properties
  become: false
  register: setupPropertiesResult

- name: "Configure ids_storage_file setup.properties via copying"
  copy:
    src: files/setup.properties
    dest: /home/{{ payara_user }}/install/ids.storage_file/setup.properties
    owner: "{{ payara_user }}"
    group: "{{ payara_user_group }}"
    mode: 0600
  when: setupPropertiesResult.stat.exists is defined and setupPropertiesResult.stat.exists == true
  notify:
    - "ids_storage_file-handler"

- name: "Configure ids_storage_file setup.properties via templating"
  template:
    src: "{{ role_path }}/../payara/templates/setup.properties.j2"
    dest: /home/{{ payara_user }}/install/ids.storage_file/setup.properties
    owner: "{{ payara_user }}"
    group: "{{ payara_user_group }}"
    mode: 0600
  when: setupPropertiesResult.stat.exists is defined and setupPropertiesResult.stat.exists == false
  notify:
    - "ids_storage_file-handler"

- name: "Setup ids_storage_file if not setup or a different version is found"
  import_tasks: tasks/installation.yml
  when: (ansible_local is not defined) or (ansible_local.local is not defined) or (ansible_local.local.instantiations is not defined) or (ansible_local.local.instantiations.ids_storage_file is not defined) or (ansible_local.local.instantiations.ids_storage_file != 'true') or (ansible_local.local.versions.ids_storage_file != ids_storage_file_version)
